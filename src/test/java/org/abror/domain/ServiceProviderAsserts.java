package org.abror.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ServiceProviderAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertServiceProviderAllPropertiesEquals(ServiceProvider expected, ServiceProvider actual) {
        assertServiceProviderAutoGeneratedPropertiesEquals(expected, actual);
        assertServiceProviderAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertServiceProviderAllUpdatablePropertiesEquals(ServiceProvider expected, ServiceProvider actual) {
        assertServiceProviderUpdatableFieldsEquals(expected, actual);
        assertServiceProviderUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertServiceProviderAutoGeneratedPropertiesEquals(ServiceProvider expected, ServiceProvider actual) {
        assertThat(expected)
            .as("Verify ServiceProvider auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertServiceProviderUpdatableFieldsEquals(ServiceProvider expected, ServiceProvider actual) {
        assertThat(expected)
            .as("Verify ServiceProvider relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getAddress()).as("check address").isEqualTo(actual.getAddress()))
            .satisfies(e -> assertThat(e.getContactInfo()).as("check contactInfo").isEqualTo(actual.getContactInfo()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertServiceProviderUpdatableRelationshipsEquals(ServiceProvider expected, ServiceProvider actual) {}
}
