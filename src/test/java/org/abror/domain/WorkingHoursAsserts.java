package org.abror.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WorkingHoursAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkingHoursAllPropertiesEquals(WorkingHours expected, WorkingHours actual) {
        assertWorkingHoursAutoGeneratedPropertiesEquals(expected, actual);
        assertWorkingHoursAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkingHoursAllUpdatablePropertiesEquals(WorkingHours expected, WorkingHours actual) {
        assertWorkingHoursUpdatableFieldsEquals(expected, actual);
        assertWorkingHoursUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkingHoursAutoGeneratedPropertiesEquals(WorkingHours expected, WorkingHours actual) {
        assertThat(expected)
            .as("Verify WorkingHours auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkingHoursUpdatableFieldsEquals(WorkingHours expected, WorkingHours actual) {
        assertThat(expected)
            .as("Verify WorkingHours relevant properties")
            .satisfies(e -> assertThat(e.getDayOfWeek()).as("check dayOfWeek").isEqualTo(actual.getDayOfWeek()))
            .satisfies(e -> assertThat(e.getStartTime()).as("check startTime").isEqualTo(actual.getStartTime()))
            .satisfies(e -> assertThat(e.getEndTime()).as("check endTime").isEqualTo(actual.getEndTime()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkingHoursUpdatableRelationshipsEquals(WorkingHours expected, WorkingHours actual) {
        assertThat(expected)
            .as("Verify WorkingHours relationships")
            .satisfies(e -> assertThat(e.getEmployee()).as("check employee").isEqualTo(actual.getEmployee()));
    }
}
